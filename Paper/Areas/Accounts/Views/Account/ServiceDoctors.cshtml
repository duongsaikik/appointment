
@using Microsoft.AspNetCore.Identity;
@using Paper.Models;
@model Paper.Areas.Accounts.Models.ServiceDoctorViewModel
@inject UserManager<ApplicationUser> userManager;
@{
    ViewData["Title"] = "ServiceEngineers";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div class="container overflow-hidden">
    <div class="row gx-5">
        <div class="col">
            <div class="p-3 mb-2 bg-primary text-white"><h5>
    Doctor
</h5></div>
            <div class="p-3 border bg-light">
                @if (Model.ServiceDoctors != null)
                {
                    <table class="table table-striped" id="tblServiceEngineers">
                        <thead>
                            <tr>
                                <th scope="col" data-field="Email">Email</th>
                                <th scope="col" data-field="UserName">Name</th>
                                <th scope="col" data-field="IsActive">Is Active</th>
                                <th scope="col" data-field="IsActiveImg">Is Active</th>
                                <th scope="col" data-field="Actions">Edit User</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.ServiceDoctors)
                            {
                                var identity = await userManager.GetClaimsAsync(user);
                                <tr>
                                    <td>@user.Email</td>
                                    <td>@user.UserName</td>
                                    <td>
                                        @(Boolean.Parse(identity.SingleOrDefault(p =>p.Type == "IsActive").Value))
                                    </td>
                                    <td>
                                        <img class="img_corec" src="@(Boolean.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value) ? "/image/correct.png" : "/image/incorrect.png")" />
                                    </td>
                                    <td>
                                        <i class='bx bxs-edit-alt icon_edit edit'></i>
                                    </td>
                                </tr>
                            }



                        </tbody>
                    </table>
                }
                else
                {
                    <div>
                        <p> No Service Doctor found, please add a Service Doctor to system.</p>
                    </div>
                }

            </div>
        </div>
        
    </div>
</div>


<div class="container overflow-hidden">
    <div class="row gx-5">
        <div class="col">
            <div class="p-3 border bg-light">
                <form asp-controller="Account" asp-action="ServiceDoctors" method="post" class="col s12" id="fromUser">
                    <input type="hidden" asp-for="Registration.IsEdit" />
                    <input type="hidden" asp-for="Registration.Email" />
                    <div class="form-floating mb-3">
                        <input asp-for="Registration.Email" class="form-control" id="Input_Registration_Email" />
                        <label asp-for="Registration.Email"></label>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Registration.UserName" class="validate form-control" />
                        <label asp-for="Registration.UserName"></label>
                        <div class="invalid-feedback">
                            Please choose a username.
                        </div>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Registration.Password" class="validate form-control"  />
                        <label asp-for="Registration.Password"></label>
                     
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Registration.ConfirmPassword" class="validate form-control" />
                        <label asp-for="Registration.ConfirmPassword"></label>
                    </div>
                    <div class="form-floating mb-3">
                        <div class="form-check form-switch">
                            <label>
                                Is Active
                                <input asp-for="Registration.IsActive" role="switch" class="validate form-check-input" />
                                <span class="lever"></span>
                            </label>
                        </div>
                    </div>
                    <div class="input-field col s4 right-align">
                        <button class="btn waves-effect waves-light btnSubmit" type="submit"
                                name="action">
                            Create
                            
                        </button>
                        <button class="btn waves-effect waves-light reset red lighten-1"
                                type="button" name="action">
                            Reset
                        </button>
                    </div>
                    <div class="row col s12 right-align" asp-validation-summary="All"></div>
                </form>
            </div>
        </div>
       
    </div>
</div>


@section Scripts{
    <script>

        $(document).ready(function () {
            // Initialize DataTable to show list of Engineers
            var table = $('#tblServiceEngineers').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']]
            });
            // Set Styles for DataTable and Number of Records to be displayed in drop-down

            var isActiveColumn = table.column(2);
            isActiveColumn.visible(false);
            // Handle Reset fucntionality
            $(document).on("click", ".reset", function () {
                $('#fromUser')[0].reset();
                $('#Input_Registration_Email').removeAttr('disabled');
                $('.btnSubmit').text('Create');
                $('#Registration_IsEdit').val('False');
            });

            if ($('#Registration_IsEdit').val() === 'True') {
                $('#Input_Registration_Email').attr('disabled', 'disabled');
            }
            $(document).on('click', '.edit', function () {

                var user = $('#tblServiceEngineers').DataTable().row($(this).parents('tr')).data();
                console.log(user)
                $('#Registration_IsEdit').val('True');
                $('#Input_Registration_Email').val(user[0]);
                $('#Input_Registration_Email').attr('disabled', 'disabled');
                $('#Registration_UserName').val(user[1]);
                $('#Registration_UserName').addClass('valid');
                $('#Registration_IsActive').prop('checked', user[2] === 'True' ? true : false);
                $('.btnSubmit').text('Save');
                M.updateTextFields();

            });

            $(document).on('click', '.btnSubmit', function () {
                $('#Registration_Email').val($('#Input_Registration_Email').val());
                M.updateTextFields();
            });
            // Set hidden Email field to correct value from UI field
            // This is required for

        });
    </script>
}