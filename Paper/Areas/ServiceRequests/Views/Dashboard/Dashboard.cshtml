@model Paper.Areas.ServiceRequests.Models.DashboardViewModel
@using ASC.Models.BaseTypes
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor UserHttpContext
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
@await Html.PartialAsync("_ServiceRequestGrid", Model.ServiceRequests, new
ViewDataDictionary(ViewData) {
 { "SectionName", "Service Requests" },
 { "Id", "tblServiceRequests" },
 { "IsAudit", false }
})
@if (UserHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()) ||
UserHttpContext.HttpContext.User.IsInRole(Roles.Doctor.ToString()))
{
    @await Html.PartialAsync("_ServiceRequestGrid", Model.AuditServiceRequests,
   new ViewDataDictionary(ViewData) {
    { "SectionName", "Recent Updates" },
    { "Id", "tblAuditServiceRequests" },
   { "IsAudit", true }
   })
}
@section Scripts{
    <script>
        $(document).ready(function () {
            // Initialize DataTable to show list of Service Requests
            var table = $('#tblServiceRequests').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']],
                // Remove default Sorting
                'sorting': [],
                'columns': [{ "visible": false }, { "visible": false }, null, {
                    "width":
                        "20%"
                }, null, null, null]
            });
            var table = $('#tblAuditServiceRequests').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']],
                // Remove default Sorting
                'sorting': [],
                'columns': [{ "visible": false }, { "visible": false }, null,
                { "width": "20%" }, null, null, null, null]
            });

           $(document).on('click', '.view', function () {
             var tableId = '#' + $(this).parents('table').attr('id');
             var serviceRequest = $(tableId).DataTable().row($(this).parents('tr')).data();
             // For Service Request Table, populate id with RowKey
             var id = serviceRequest[0];
             // For Service Request Audit Table, populate id by spliting the Partition key with '-'
             if (tableId.indexOf('Audit') >= 0)
             id = serviceRequest[1].substring(serviceRequest[1].indexOf('-') + 1,serviceRequest[1].length);
             window.location.href = '@Url.Action("ServiceRequestDetails","ServiceRequest",new { Area = "ServiceRequests" })?Id=' + id;
           });
        });
    </script>
}